import 'dart:io';
import 'package:flutter/foundation.dart' show kIsWeb;
import 'package:flutter/material.dart';

void generateAssets() {
  // Check if the app is running on the web
  if (kIsWeb) {
    // Logic for web platform
    debugPrint('Running on web. Local file system access is not available.');
    return;
  }

  const projectRoot = '/Users/mairabarbosa/StudioProjects/memory_game'; // Assuming this is the project root
  final assetDirectory = Directory('$projectRoot/images');

  if (!assetDirectory.existsSync()) {
    debugPrint('Asset directory not found: ${assetDirectory.path}');
    return;
  }

  final output = StringBuffer()
    ..writeln('// GENERATED CODE - DO NOT MODIFY BY HAND')
    ..writeln('// Generated by generate_assets.dart')
    ..writeln()
    ..writeln('class GeneratedAssets {'); // Start of the GeneratedAssets class

  // Get all subdirectories in the assets/images directory
  final subdirectories = assetDirectory.listSync().whereType<Directory>();
  List<String> folders = [];

  for (var dir in subdirectories) {
    final dirName = dir.path.split(RegExp(r'[/\\]')).last.replaceAll('_', '');

    folders.add(dirName);

    final files =
        dir.listSync(recursive: true).where((file) => file.path.endsWith('.png')).map((file) => file.path).toList();

    output.writeln('  static final List<String> ${dirName}Files = <String>[');
    for (var file in files) {
      output.writeln("    '${file.replaceFirst('$projectRoot/', '')}',");
    }
    output.writeln('  ];');
    output.writeln();
  }

  // Prepare to collect all lists
  output.writeln('  static Map<String, List<String>> get allLists => {');
  for (var folder in folders) {
    output.writeln('    \'$folder\': ${folder}Files,'); // Add the list to the map
  }
  output.writeln('  };'); // Close the map

  output.writeln('}'); // End of the GeneratedAssets class

  final outputFile = File('$projectRoot/lib/asset_files.dart');
  outputFile.writeAsStringSync(output.toString());
  debugPrint('Asset file list generated successfully at ${outputFile.path}');
}
